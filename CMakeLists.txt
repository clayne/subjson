CMAKE_MINIMUM_REQUIRED(VERSION 2.8.9)
PROJECT(subjson)
SET(SUBJSON_GTEST ${PROJECT_SOURCE_DIR}/contrib/gtest)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})

if((CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
    AND NOT COUCHBASE_SERVER_BUILD)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
endif()

SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib)
IF(WIN32)
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)
    ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
ELSE()
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib)
ENDIF()

FILE(GLOB SUBJSON_SRC subdoc/*.c subdoc/*.cc)
ADD_LIBRARY(subjson ${SUBJSON_SRC})
ADD_EXECUTABLE(bench bench.cc contrib/cliopts/cliopts.c)
TARGET_LINK_LIBRARIES(bench subjson)

IF(EXISTS ${SUBJSON_GTEST} OR EXISTS ${gtest_SOURCE_DIR})
  ENABLE_TESTING()
  ADD_SUBDIRECTORY(tests)
ENDIF(EXISTS ${SUBJSON_GTEST} OR EXISTS ${gtest_SOURCE_DIR})
